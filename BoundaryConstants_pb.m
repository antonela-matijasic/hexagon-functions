(* Created with the Wolfram Language : www.wolfram.com *)
BoundaryPB = {0, -5/2 + (13*ep^2*Pi^2)/12 + 
      ep^4*((-89*Pi^4)/2160 - (16*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) + 
      12*ep^3*Zeta[3], 0, 0, 1 + (ep^2*Pi^2)/6 + 
      ep^4*((49*Pi^4)/216 + (32*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) + 
      (38*ep^3*Zeta[3])/3, 1 + (ep^2*Pi^2)/6 + 
      ep^4*((71*Pi^4)/360 + 20*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) + 
      (34*ep^3*Zeta[3])/3, 0, 0, 0, 
     ep^4*(-1/540*Pi^4 - (4*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3), 0, 0, 
     2 - (2*ep^2*Pi^2)/3 - (ep^4*Pi^4)/12 - (34*ep^3*Zeta[3])/3, 
     2 - (5*ep^2*Pi^2)/6 + ep^4*(-1/6*Pi^4 + 
        6*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - (46*ep^3*Zeta[3])/3, 0, 
     2 - (5*ep^2*Pi^2)/6 + ep^4*(-1/6*Pi^4 + 
        6*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - (46*ep^3*Zeta[3])/3, 0, 
     9/4 - (11*ep^2*Pi^2)/8 + ep^4*((-41*Pi^4)/160 - 
        8*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - 26*ep^3*Zeta[3], 
     3/2 - (11*ep^2*Pi^2)/12 + ep^4*((-13*Pi^4)/48 - 
        (44*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - (68*ep^3*Zeta[3])/3, 0, 
     0, 0, 0, 1 - (ep^2*Pi^2)/6 + ep^4*((-29*Pi^4)/360 + 
        (14*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 6*ep^3*Zeta[3], 
     1 - (ep^2*Pi^2)/3 - (17*ep^4*Pi^4)/120 - (32*ep^3*Zeta[3])/3, 
     3/4 - (ep^2*Pi^2)/8 + ep^4*((-61*Pi^4)/864 - 
        (8*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - (4*ep^3*Zeta[3])/3, 0, 
     0, 0, -1/6*(ep^2*Pi^2) + ep^4*((13*Pi^4)/360 + 
        6*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - ep^3*Zeta[3], 0, 0, 0, 
     (ep^2*Pi^2)/6 + (ep^4*Pi^4)/60 + 2*ep^3*Zeta[3], 0, 0, 0, 
     ep^4*((-2*Pi^4)/45 - (14*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      (8*ep^3*Zeta[3])/3, -1/6*(ep^2*Pi^2) + 
      ep^4*((13*Pi^4)/360 + 6*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - 
      ep^3*Zeta[3], 0, 0, 0, 0, (12*I)*ep^4*
      Im[PolyLog[4, (1 - I*Sqrt[3])/2]], 1 - (ep^2*Pi^2)/6 - 
      (7*ep^4*Pi^4)/120 - (14*ep^3*Zeta[3])/3, 
     ep^4*((-2*Pi^4)/45 - (14*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      (8*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + 
      ep^4*((-13*Pi^4)/240 - 20*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - 
      (8*ep^3*Zeta[3])/3, 1 - (ep^2*Pi^2)/6 + 
      ep^4*((-11*Pi^4)/120 + 4*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - 
      (20*ep^3*Zeta[3])/3, (-4*I)*ep^2*Im[PolyLog[2, (1 - I*Sqrt[3])/2]] + 
      I*ep^3*((-5*Pi^3)/27 - 12*Im[PolyLog[3, 1 + (1 - I*Sqrt[3])/2]] - 
        Pi*Log[3]^2) + I*ep^4*((2*Pi^2*Im[PolyLog[2, (1 - I*Sqrt[3])/2]])/3 - 
        (20*Im[PolyLog[4, (1 - I*Sqrt[3])/2]])/3 + 
        24*Im[PolyLog[4, 1 + 2/(1 - I*Sqrt[3])]] - (5*Pi^3*Log[3])/27 - 
        (Pi*Log[3]^3)/3), 1/2 - (ep^2*Pi^2)/12 - (19*ep^4*Pi^4)/240 - 
      (16*ep^3*Zeta[3])/3, 0, 0, 1 - (ep^2*Pi^2)/6 - (7*ep^4*Pi^4)/120 - 
      (14*ep^3*Zeta[3])/3, -7*ep^3*Zeta[3] + 
      ep^4*((-19*Pi^4)/144 + 6*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2 + 
        18*Re[Li[{2, 2}, {-rho^(-1), rho}]] - 28*Log[2]*Zeta[3]), 
     -1 + (5*ep^2*Pi^2)/6 + (119*ep^4*Pi^4)/360 + (62*ep^3*Zeta[3])/3, 
     1/2 - (ep^2*Pi^2)/12 - (19*ep^4*Pi^4)/240 - (16*ep^3*Zeta[3])/3, 
     1/2 - (ep^2*Pi^2)/12 - (19*ep^4*Pi^4)/240 - (16*ep^3*Zeta[3])/3, 
     -1/2 + (ep^2*Pi^2)/12 + (19*ep^4*Pi^4)/240 + (16*ep^3*Zeta[3])/3, 
     (4*I)*ep^2*Im[PolyLog[2, (1 - I*Sqrt[3])/2]] + 
      I*ep^3*((-13*Pi^3)/27 - 12*Im[PolyLog[3, 1 + (1 - I*Sqrt[3])/2]] - 
        Pi*Log[3]^2) + I*ep^4*((-14*Pi^2*Im[PolyLog[2, (1 - I*Sqrt[3])/2]])/
         9 - (56*Im[PolyLog[4, (1 - I*Sqrt[3])/2]])/3 - 
        24*Im[PolyLog[4, 1 + 2/(1 - I*Sqrt[3])]] + (13*Pi^3*Log[3])/27 + 
        (Pi*Log[3]^3)/3), 0, 3/2 - (7*ep^2*Pi^2)/12 + 
      ep^4*((-121*Pi^4)/2160 + (4*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      (28*ep^3*Zeta[3])/3, 3/2 - (7*ep^2*Pi^2)/12 + 
      ep^4*((-121*Pi^4)/2160 + (4*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      (28*ep^3*Zeta[3])/3, -3/2 + (7*ep^2*Pi^2)/12 + 
      ep^4*((121*Pi^4)/2160 - (4*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) + 
      (28*ep^3*Zeta[3])/3, 0, 0, 0, 1 - (ep^2*Pi^2)/3 - (17*ep^4*Pi^4)/120 - 
      (32*ep^3*Zeta[3])/3, 0, 0, 1 - (ep^2*Pi^2)/3 - (17*ep^4*Pi^4)/120 - 
      (32*ep^3*Zeta[3])/3, 1 - (ep^2*Pi^2)/6 + 
      ep^4*((-29*Pi^4)/360 + (14*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      6*ep^3*Zeta[3], 0, 0, 
     ep^4*((-2*Pi^4)/45 - (14*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      (8*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + 
      ep^4*((-13*Pi^4)/240 - 20*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - 
      (8*ep^3*Zeta[3])/3, (ep^2*Pi^2)/6 + (ep^4*Pi^4)/60 + 2*ep^3*Zeta[3], 0, 
     (4*I)*ep^2*Im[PolyLog[2, (1 - I*Sqrt[3])/2]] + 
      I*ep^3*((-13*Pi^3)/27 - 12*Im[PolyLog[3, 1 + (1 - I*Sqrt[3])/2]] - 
        Pi*Log[3]^2) + I*ep^4*((-14*Pi^2*Im[PolyLog[2, (1 - I*Sqrt[3])/2]])/
         9 - (56*Im[PolyLog[4, (1 - I*Sqrt[3])/2]])/3 - 
        24*Im[PolyLog[4, 1 + 2/(1 - I*Sqrt[3])]] + (13*Pi^3*Log[3])/27 + 
        (Pi*Log[3]^3)/3), 0, 3/2 - (7*ep^2*Pi^2)/12 + 
      ep^4*((-121*Pi^4)/2160 + (4*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      (28*ep^3*Zeta[3])/3, 3/2 - (7*ep^2*Pi^2)/12 + 
      ep^4*((-121*Pi^4)/2160 + (4*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      (28*ep^3*Zeta[3])/3, -3/2 + (7*ep^2*Pi^2)/12 + 
      ep^4*((121*Pi^4)/2160 - (4*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) + 
      (28*ep^3*Zeta[3])/3, 0, 0, 0, 0, 0, 0, 1 - (ep^2*Pi^2)/6 - 
      (7*ep^4*Pi^4)/120 - (14*ep^3*Zeta[3])/3, 
     ep^4*((-2*Pi^4)/45 - (14*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      (8*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + 
      ep^4*((-13*Pi^4)/240 - 20*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - 
      (8*ep^3*Zeta[3])/3, 1/2 - (ep^2*Pi^2)/12 - (19*ep^4*Pi^4)/240 - 
      (16*ep^3*Zeta[3])/3, 
     ep^4*((-2*Pi^4)/45 - (14*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      (8*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + 
      ep^4*((-13*Pi^4)/240 - 20*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - 
      (8*ep^3*Zeta[3])/3, 1/2 - (ep^2*Pi^2)/12 - (19*ep^4*Pi^4)/240 - 
      (16*ep^3*Zeta[3])/3, 1 - (ep^2*Pi^2)/6 + 
      ep^4*((-11*Pi^4)/120 + 4*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - 
      (20*ep^3*Zeta[3])/3, (-4*I)*ep^2*Im[PolyLog[2, (1 - I*Sqrt[3])/2]] + 
      I*ep^3*((-5*Pi^3)/27 - 12*Im[PolyLog[3, 1 + (1 - I*Sqrt[3])/2]] - 
        Pi*Log[3]^2) + I*ep^4*((2*Pi^2*Im[PolyLog[2, (1 - I*Sqrt[3])/2]])/3 - 
        (20*Im[PolyLog[4, (1 - I*Sqrt[3])/2]])/3 + 
        24*Im[PolyLog[4, 1 + 2/(1 - I*Sqrt[3])]] - (5*Pi^3*Log[3])/27 - 
        (Pi*Log[3]^3)/3), 1 - (ep^2*Pi^2)/3 - (17*ep^4*Pi^4)/120 - 
      (32*ep^3*Zeta[3])/3, 1/2 - (ep^2*Pi^2)/12 - (19*ep^4*Pi^4)/240 - 
      (16*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + (19*ep^4*Pi^4)/240 + 
      (16*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + (19*ep^4*Pi^4)/240 + 
      (16*ep^3*Zeta[3])/3, 0, 0, 
     ep^4*((-2*Pi^4)/45 - (14*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 
      (8*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + 
      ep^4*((-13*Pi^4)/240 - 20*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - 
      (8*ep^3*Zeta[3])/3, 0, (ep^2*Pi^2)/6 + (ep^4*Pi^4)/60 + 2*ep^3*Zeta[3], 
     1 - (ep^2*Pi^2)/6 + ep^4*((-29*Pi^4)/360 + 
        (14*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2)/3) - 6*ep^3*Zeta[3], 
     1 - (ep^2*Pi^2)/6 + ep^4*((-11*Pi^4)/120 + 
        4*Im[PolyLog[2, (1 - I*Sqrt[3])/2]]^2) - (20*ep^3*Zeta[3])/3, 
     (-4*I)*ep^2*Im[PolyLog[2, (1 - I*Sqrt[3])/2]] + 
      I*ep^3*((-5*Pi^3)/27 - 12*Im[PolyLog[3, 1 + (1 - I*Sqrt[3])/2]] - 
        Pi*Log[3]^2) + I*ep^4*((2*Pi^2*Im[PolyLog[2, (1 - I*Sqrt[3])/2]])/3 - 
        (20*Im[PolyLog[4, (1 - I*Sqrt[3])/2]])/3 + 
        24*Im[PolyLog[4, 1 + 2/(1 - I*Sqrt[3])]] - (5*Pi^3*Log[3])/27 - 
        (Pi*Log[3]^3)/3), -1/2 + (ep^2*Pi^2)/12 + (19*ep^4*Pi^4)/240 + 
      (16*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + (19*ep^4*Pi^4)/240 + 
      (16*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + (19*ep^4*Pi^4)/240 + 
      (16*ep^3*Zeta[3])/3, 1 - (ep^2*Pi^2)/3 - (17*ep^4*Pi^4)/120 - 
      (32*ep^3*Zeta[3])/3, 1/2 - (ep^2*Pi^2)/12 - (19*ep^4*Pi^4)/240 - 
      (16*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + (19*ep^4*Pi^4)/240 + 
      (16*ep^3*Zeta[3])/3, -1/2 + (ep^2*Pi^2)/12 + (19*ep^4*Pi^4)/240 + 
      (16*ep^3*Zeta[3])/3}
 
Li22Repl = {Re[Li[{2, 2}, {-rho^(-1), rho}]] -> -0.01730470568730664674504343\
55889871693860628933891587018561403628611536540721457098129032693342062543249\
75224987749573374947573569243935708678327335120277659384747929992873005421209\
03804054915737390204499314289805666151436605726135446509507175792317413252288\
14200280782930011221830209096155140277214521511867861903892525419019608398693\
57216615205778181493444856392645558661168947050995081621325538073474380999999\
9999999999999`403.23816421735654}
